{"version":3,"sources":["components/table/TableRow.js","components/table/NameSortLink.js","components/head/InputFilter.js","utils/compareNames.js","utils/API.js","components/table/Table.js","App.js","index.js"],"names":["EmployeeRow","props","employeeRecord","picture","large","name","first","last","phone","dob","date","NameSortLink","href","onClick","toggleSortDirection","NameFilterInput","htmlFor","type","value","filterState","onChange","onFilterChange","id","compareNames","direction","employeeRecord1","employeeRecord2","name1","name2","result","search","axios","get","EmployeeTable","useState","employees","filteredEmployees","setFilteredEmployees","sortedEmployees","setSortedEmployees","setFilterState","sortDirection","setSortDirection","useEffect","filteredRecords","filter","toLowerCase","startsWith","filteredEmployeesCopy","slice","sort","event","target","preventDefault","stopPropagation","map","App","API","results","ReactDOM","render","document","getElementById"],"mappings":"wLAaeA,MAXf,SAAqBC,GACnB,OACE,+BACE,6BAAKA,EAAMC,eAAeC,QAAQC,QAClC,+BAAKH,EAAMC,eAAeG,KAAKC,MAA/B,IAAuCL,EAAMC,eAAeG,KAAKE,QACjE,6BAAKN,EAAMC,eAAeM,QAC1B,6BAAKP,EAAMC,eAAeO,IAAIC,WCFrBC,MAJf,SAAsBV,GACpB,OAAO,mBAAGW,KAAK,QAAQC,QAASZ,EAAMa,oBAA/B,wBCaMC,MAdf,SAAyBd,GACvB,OACE,gCACE,uBAAOe,QAAQ,eAAf,iCACA,uBACAC,KAAK,OACLC,MAAOjB,EAAMkB,YACbC,SAAUnB,EAAMoB,eAChBhB,KAAK,cACLiB,GAAG,qBCEMC,MAbf,WAAsC,IAAhBC,EAAe,uDAAH,EAChC,OAAO,SAAUC,EAAiBC,GAChC,IAAMC,EAAK,UAAMF,EAAgBpB,KAAKC,MAA3B,YAAoCmB,EAAgBpB,KAAKE,MAC9DqB,EAAK,UAAMF,EAAgBrB,KAAKC,MAA3B,YAAoCoB,EAAgBrB,KAAKE,MAChEsB,EAAS,EAMb,OALGF,EAAQC,EACPC,EAAS,EACFF,EAAQC,IACfC,GAAU,GAEPA,EAASL,I,iBCNL,GACbM,OAAQ,WACN,OAAOC,IAAMC,IAJD,mDC6DDC,MAxDf,SAAuBhC,GAAO,MAEsBiC,mBAASjC,EAAMkC,WAFrC,mBAErBC,EAFqB,KAEFC,EAFE,OAGkBH,mBAASE,GAH3B,mBAGrBE,EAHqB,KAGJC,EAHI,OAIUL,mBAAS,IAJnB,mBAIrBf,EAJqB,KAIRqB,EAJQ,OAKcN,mBAAS,GALvB,mBAKrBO,EALqB,KAKNC,EALM,KAkC5B,OA1BAC,qBAAU,WACR,IAAIC,EAAkB3C,EAAMkC,UACR,KAAhBhB,IACFyB,EAAkB3C,EAAMkC,UACvBU,QAAO,SAAA3C,GACN,OAAOA,EAAeG,KAAKC,MAAMwC,cAAcC,WAAW5B,IACrDjB,EAAeG,KAAKE,KAAKuC,cAAcC,WAAW5B,OAG3DkB,EAAqBO,KACpB,CAAC3C,EAAMkC,UAAWhB,IACrBwB,qBAAU,WACR,IAAMK,EAAwBZ,EAAkBa,MAAM,GACtDD,EAAsBE,KAAK3B,EAAakB,IACxCF,EAAmBS,KAClB,CAACZ,EAAmBK,IAYrB,gCACE,cAAC,EAAD,CAAiBtB,YAAaA,EAAaE,eAX/C,SAAwB8B,GAAQ,IACtBjC,EAAUiC,EAAMC,OAAhBlC,MACRsB,EAAetB,MAUb,kCACE,gCACE,6BACE,6BAAI,cAAC,EAAD,CAAcJ,oBAX5B,SAA6BqC,GAC3BA,EAAME,iBACNF,EAAMG,kBACNZ,GAAkB,EAAID,YAWlB,gCAEIH,EAAgBiB,KAAI,SAAArD,GAAc,OAC/B,cAAC,EAAD,CACCA,eAAgBA,GACXA,EAAeoB,GAAGJ,mBC5CxBsC,MANf,WACE,OACE,cAAC,EAAD,CAAerB,UAAWsB,EAAIC,WCFlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.da32b667.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeRow(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.employeeRecord.picture.large}</td>\r\n      <td>{props.employeeRecord.name.first} {props.employeeRecord.name.last}</td>\r\n      <td>{props.employeeRecord.phone}</td>\r\n      <td>{props.employeeRecord.dob.date}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EmployeeRow;","import React from \"react\";\r\n\r\nfunction NameSortLink(props) {\r\n  return <a href=\"#home\" onClick={props.toggleSortDirection}>Full Name</a>;\r\n}\r\n\r\nexport default NameSortLink;","import React from \"react\";\r\n\r\nfunction NameFilterInput(props) {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"filter-input\">Filter List By Name</label>\r\n      <input\r\n      type=\"text\"\r\n      value={props.filterState}\r\n      onChange={props.onFilterChange}\r\n      name=\"filterInput\"\r\n      id=\"filter-input\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NameFilterInput;","function compareNames(direction = 1) {\r\n  return function (employeeRecord1, employeeRecord2) {\r\n    const name1 = `${employeeRecord1.name.first} ${employeeRecord1.name.last}`\r\n    const name2 = `${employeeRecord2.name.first} ${employeeRecord2.name.last}`\r\n    let result = 0;\r\n    if(name1 > name2) {\r\n        result = 1;\r\n    } else if (name1 < name2) {\r\n        result = -1;\r\n    }\r\n    return result * direction;\r\n  }\r\n}\r\nexport default compareNames;\r\n","import axios from \"axios\";\r\n\r\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=us\";\r\n\r\nexport default {\r\n  search: function() {\r\n    return axios.get(BASEURL);\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport EmployeeRow from \"./TableRow\";\r\nimport NameSortLink from \"./NameSortLink\";\r\nimport NameFilterInput from \"../head/InputFilter\";\r\nimport compareNames from \"../../utils/compareNames\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction EmployeeTable(props) {\r\n  // This becomes \"this.state = {}\"\r\n  const [filteredEmployees, setFilteredEmployees] = useState(props.employees);\r\n  const [sortedEmployees, setSortedEmployees] = useState(filteredEmployees);\r\n  const [filterState, setFilterState] = useState(\"\");\r\n  const [sortDirection, setSortDirection] = useState(1);\r\n  // Use effect goes from useEffect to componentDidMount (for startup)\r\n  // and your change function for each update\r\n  useEffect(function () {\r\n    let filteredRecords = props.employees;\r\n    if (filterState !== '') {\r\n      filteredRecords = props.employees\r\n      .filter(employeeRecord => {\r\n        return employeeRecord.name.first.toLowerCase().startsWith(filterState)\r\n          || employeeRecord.name.last.toLowerCase().startsWith(filterState);\r\n      });\r\n    }\r\n    setFilteredEmployees(filteredRecords);\r\n  }, [props.employees, filterState]);\r\n  useEffect(function () {\r\n    const filteredEmployeesCopy = filteredEmployees.slice(0);\r\n    filteredEmployeesCopy.sort(compareNames(sortDirection));\r\n    setSortedEmployees(filteredEmployeesCopy);\r\n  }, [filteredEmployees, sortDirection]);\r\n  // These stay basically the same. They just use this.setState\r\n  function onFilterChange(event) {\r\n    const { value } = event.target;\r\n    setFilterState(value);\r\n  }\r\n  function toggleSortDirection(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setSortDirection(-1 * sortDirection);\r\n  }\r\n  return (\r\n    <div>\r\n      <NameFilterInput filterState={filterState} onFilterChange={onFilterChange}></NameFilterInput>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th><NameSortLink toggleSortDirection={toggleSortDirection} /></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            sortedEmployees.map(employeeRecord =>\r\n              (<EmployeeRow\r\n                employeeRecord={employeeRecord}\r\n                key={employeeRecord.id.value} />))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeeTable;","import React from 'react';\r\n// import './App.css';\r\nimport EmployeeTable from \"./components/table/Table\";\r\nimport API from \"./utils/API\";\r\n\r\nfunction App() {\r\n  return (\r\n    <EmployeeTable employees={API.results} />\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bulma/css/bulma.css';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}